var tipuesearch={"pages":[{"title":"Documentation \/ Setup","text":" Setup Lets get you up and running with the Silk Web Toolkit Navigate to the latest release on GitHubfor Linux download the relevant platform file (.deb or .rpm)for Mac download the .tgz and unpack it in a directory on you classpath E.G. ~\/binfor Windows download the JAR file and use a progam like launch4j to convert it into an executableDownload a Silk example project and unzip it. Projects are structured like so.\u251c\u2500\u2500 components \u2502&nbsp;&nbsp; \u251c\u2500\u2500 footer.html \u2502&nbsp;&nbsp; \u251c\u2500\u2500 header.html \u2502&nbsp;&nbsp; \u2514\u2500\u2500 site-name.html \u251c\u2500\u2500 data \u2502&nbsp;&nbsp; \u2514\u2500\u2500 news \u2502&nbsp;&nbsp; \u251c\u2500\u2500 item1.edn \u2502&nbsp;&nbsp; \u2514\u2500\u2500 item2.edn \u251c\u2500\u2500 meta \u251c\u2500\u2500 resource \u2502&nbsp;&nbsp; \u2514\u2500\u2500 css \u2502&nbsp;&nbsp; &nbsp;&nbsp; \u2514\u2500\u2500style.css \u251c\u2500\u2500 site \u251c\u2500\u2500 template \u2502&nbsp;&nbsp; \u2514\u2500\u2500 default.html \u2514\u2500\u2500 view \u251c\u2500\u2500 index.html \u2514\u2500\u2500 readme.txtIn a terminal type silk for a full list of command line options.Use the following command to spin your project and assemble its contents into the site directorysilk spin --directory ~\/path\/to\/silk-example To spin automatically on file changes use the --auto optionsilk spin --auto --directory ~\/path\/to\/silk-example ","tags":"","url":"documentation.html#setup"},{"title":"Documentation \/ Templates","text":" Templates Get the same look and feel across all your pages Add a data-sw-view attribute to a &lt;div&gt; tag, to specify where your views are inserted into your templates.&lt;html&gt; &lt;head&gt; &lt;title&gt;My Sample Site&lt;\/title&gt; &lt;\/head&gt; &lt;body&gt; &lt;header&gt; &lt;h1&gt;My Sample Site&lt;\/h1&gt; &lt;\/header&gt; &lt;div data-sw-view=&quot;&quot;&gt; Placedholder for view &lt;\/div&gt; &lt;footer&gt; &lt;hr&gt; &lt;\/footer&gt; &lt;\/body&gt; &lt;\/html&gt; ","tags":"","url":"documentation.html#templates"},{"title":"Documentation \/ Views","text":" Views The epicentre of your site, organise your content Out of the box a view will look for a template called &quot;default&quot;. You can override this by providing an optional &lt;meta&gt; tag, see below. The template title can be overriden by providing an optional title element in the same place.&lt;html&gt; &lt;head&gt; &lt;title&gt;My Title&lt;\/title&gt; &lt;meta name=&quot;template&quot; content=&quot;example-template&quot; \/&gt; &lt;\/head&gt; &lt;body&gt; &lt;div&gt; &lt;p&gt;This is the content for the view&lt;p&gt; &lt;\/div&gt; &lt;\/body&gt; &lt;\/html&gt; ","tags":"","url":"documentation.html#views"},{"title":"Documentation \/ Components","text":" Components Contain reusable mark-up Simple components enable re-use of structural or semantic mark-up.Component mark up must be placed into the components directory. Everything inside the &lt;body&gt; tag is injected into the caller. The component's name is its file-name minus extension.An example of a simple component is given below.&lt;html&gt; &lt;body&gt; &lt;span&gt; My Sample Site &lt;\/span&gt; &lt;\/body&gt; &lt;\/html&gt;Call the component from a template, view or another component with the following mark-up.&lt;span data-sw-component=&quot;site-name&quot; \/&gt; ","tags":"","url":"documentation.html#components"},{"title":"Documentation \/ Sources","text":" Sources Add blog, news or photo updates without touching mark-up A source is a collection of articles, for example news stories or blog posts. Source related attributes include;data-sw-source (required: location)data-sw-sort (optional: key on items to sort on)data-sw-sort-dir (optional: specify ascending or descending)data-sw-limit (optional: limit the number of items)The following will gather articles from data\/news (a directory called news under the data directory on disk) and inject each into an HTML list (&lt;ul&gt; &lt;ol&gt; &lt;tbody&gt;)&lt;ul data-sw-source=&quot;news&quot;&gt; &lt;li&gt; &lt;h2 data-sw-text=&quot;title&quot;&gt;&lt;\/h2&gt; &lt;div data-sw-text=&quot;description&quot;&gt;&lt;\/div&gt; &lt;ol&gt; &lt;li&gt; &lt;img data-sw-src=&quot;images\/path&quot; data-sw-alt=&quot;images\/tooltip&quot; \/&gt; &lt;\/li&gt; &lt;\/ol&gt; &lt;\/li&gt; &lt;\/ul&gt;A source can also be injected into a component like so.&lt;div data-sw-component=&quot;my-news&quot; data-sw-source=&quot;news&quot; \/&gt; Below is a single news item, in EDN Format, containing all the mentioned keys. Appending the keys with -html or -md would allow rich injection of HTML or Markdown respectively.File: data\/news\/item1.edn{:title &quot;Lorem ipsum&quot; :description &quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do ...&quot; :images [{:path &quot;resources\/img\/1.jpg&quot; :tooltip &quot;Picture 1&quot;} {:path &quot;resources\/img\/2.jpg&quot; :tooltip &quot;Picture 2&quot;}]}Attributes data-sw-when and data-sw-when-not can be used to handle optional values. The following will display a link when link-path is present and a span if it isn't .&lt;div data-sw-when=&quot;link-path&quot;&gt; &lt;a data-sw-href=&quot;link-path&quot; data-sw-text=&quot;link-title&quot; \/&gt; &lt;\/div&gt; &lt;div data-sw-when-not=&quot;link-path&quot;&gt; &lt;span data-sw-text=&quot;link-title&quot; \/&gt; &lt;\/div&gt; ","tags":"","url":"documentation.html#sources"},{"title":"Documentation \/ Tree Source","text":" Tree Source add hierarchical data such as family trees A source could also be a directory tree like so.data\/ \u2514\u2500\u2500 my-source\/ \u251c\u2500\u2500 sub-1\/ \u2502 \u2514\u2500\u2500 item1.edn \u2514\u2500\u2500 sub-2\/ \u251c\u2500\u2500 item1.edn \u2514\u2500\u2500 item2.ednUse special attribute value sw\/contents to access each directory and sw\/name for the file\/folder name.&lt;ul data-sw-source=&quot;my-source&quot;&gt; &lt;li&gt; &lt;span data-sw-text=&quot;sw\/name&quot;&gt;&lt;\/span&gt; &lt;ul&gt; &lt;li&gt; &lt;span data-sw-text=&quot;sw\/contents.sw\/name&quot;&gt;&lt;\/span&gt; &lt;ul&gt; &lt;li&gt; &lt;a data-sw-href=&quot;sw\/contents.sw\/contents.sw\/path&quot; data-sw-text=&quot;sw\/contents.sw\/contents.title&quot;&gt; &lt;\/a&gt; &lt;\/li&gt; &lt;\/ul&gt; &lt;\/li&gt; &lt;\/ul&gt; &lt;\/li&gt; &lt;\/ul&gt; ","tags":"","url":"documentation.html#tree-sources"},{"title":"Documentation \/ Details Page","text":" Details Page A dedicated page per source item A details page is a dedicated template for rendering whole articles belonging to a specific source. For source data\/news, if the file below is created, each news article will have it's own dedicated details page.File: template\/detail\/news.html&lt;html&gt; &lt;body&gt; &lt;h2 data-sw-text=&quot;title&quot;&gt;&lt;\/h2&gt; &lt;div data-sw-text=&quot;further-details&quot;&gt;&lt;\/div&gt; &lt;\/body&gt; &lt;\/html&gt;Link to a details page using the special attribute value sw\/path as demonstrated below.&lt;ul data-sw-source=&quot;news&quot;\/&gt; &lt;li&gt; &lt;a data-sw-href=&quot;sw\/path&quot; href=&quot;#&quot;&gt;Click here for further details&lt;\/a&gt; &lt;\/li&gt; &lt;\/ul&gt; ","tags":"","url":"documentation.html#details-page"},{"title":"Documentation \/ Navigation","text":" Navigation Generate site menu's from data driven components The Silk Web Toolkit offers two forms of navigation, views and bookmarks. View navigation caters for site hierarchy. Bookmark navigation for sections inside a view. The data generated for navigation can be found here: ~\/.silk\/sw after each spin.View NavData for view navigation is generated by including the data-sw-nav attribute in a view's body tag. Views can be sorted by the data-sw-priority attribute. Below is an example of how views\/index.html could be added.&lt;html&gt; &lt;body data-sw-nav=&quot;Home&quot; data-sw-priority=&quot;1&quot;&gt; &lt;div&gt; &lt;p&gt;This is the content for the view&lt;p&gt; &lt;\/div&gt; &lt;\/body&gt; &lt;html&gt;This menu could be included into your site's template.&lt;ul data-sw-source=&quot;sw\/views&quot; data-sw-sort=&quot;priority&quot; data-sw-sort-dir=&quot;ascending&quot;&gt; &lt;li&gt; &lt;a data-sw-href=&quot;path&quot; data-sw-text=&quot;title&quot;&gt;&lt;\/a&gt; &lt;\/li&gt; &lt;\/ul&gt;Bookmark NavData for page bookmarks is generated by placing the data-sw-nav attribute into the same tag which contains the bookmark id.&lt;section data-sw-nav=&quot;Section 1&quot; id=&quot;sec1&quot;&gt; &lt;h2&gt;Section 1&lt;\/h2&gt; &lt;p&gt; This is the content for the section 1 &lt;\/p&gt; &lt;\/section&gt;The menu for index.html would be included in the view as follows.&lt;ul data-sw-source=&quot;sw\/bookmarks\/index&quot; data-sw-sort=&quot;priority&quot; data-sw-sort-dir=&quot;ascending&quot;&gt; &lt;li&gt; &lt;a data-sw-href=&quot;path&quot; data-sw-text=&quot;title&quot;&gt;&lt;\/a&gt; &lt;\/li&gt; &lt;\/ul&gt; ","tags":"","url":"documentation.html#navigation"},{"title":"Documentation \/ Tipue Search Support","text":" Tipue Search Support Control your searchable content dynamically We recommend you look at Tipue Search, an open source JQuery search engine, along with our Blog example. This search engine has two modes &quot;Live&quot; and &quot;JSON&quot;.&quot;Live&quot; automatically indexes your site but due to the Same Origin Policy it requires your site to be on the web (live) for it to work.&quot;JSON&quot; mode requires a JavaScript file with search terms to be maintained.By adding attribute data-sw-search-content to your markup the Silk Web Toolkit will allow you to include a JavaScript file (resource\/js\/tipuesearch_content.js) which contains the &quot;JSON&quot; search terms. The data-sw-search-content attribute can be added to Templates, Views, Components and Details Pages. Navigation attributes are used to gather titles and links for your searchable contents.Below is an example of how to include multiple searchable sections to a page with bookmark navigation.&lt;html&gt; &lt;body data-sw-nav=&quot;Documentation&quot; data-sw-priority=&quot;2&quot; &gt; &lt;section data-sw-nav=&quot;Section 1&quot; id=&quot;sec1&quot; data-sw-search-content&gt; &lt;p&gt;Some searchable content.&lt;\/p&gt; &lt;p&gt;Some more.&lt;\/p&gt; &lt;\/section&gt; &lt;section data-sw-nav=&quot;Section 2&quot; id=&quot;sec2&quot; data-sw-search-content&gt; &lt;p&gt;Some searchable content.&lt;\/p&gt; &lt;p&gt;Some more.&lt;\/p&gt; &lt;\/section&gt; &lt;\/body&gt; &lt;\/html&gt; ","tags":"","url":"documentation.html#tipue-search-support"}]};var tipuesearch_stop_words = ["a", "about", "above", "after", "again", "against", "all", "am", "an", "and", "any", "are", "aren't", "as", "at", "be", "because", "been", "before", "being", "below", "between", "both", "but", "by", "can't", "cannot", "could", "couldn't", "did", "didn't", "do", "does", "doesn't", "doing", "don't", "down", "during", "each", "few", "for", "from", "further", "had", "hadn't", "has", "hasn't", "have", "haven't", "having", "he", "he'd", "he'll", "he's", "her", "here", "here's", "hers", "herself", "him", "himself", "his", "how", "how's", "i", "i'd", "i'll", "i'm", "i've", "if", "in", "into", "is", "isn't", "it", "it's", "its", "itself", "let's", "me", "more", "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "off", "on", "once", "only", "or", "other", "ought", "our", "ours", "ourselves", "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't", "so", "some", "such", "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's", "these", "they", "they'd", "they'll", "they're", "they've", "this", "those", "through", "to", "too", "under", "until", "up", "very", "was", "wasn't", "we", "we'd", "we'll", "we're", "we've", "were", "weren't", "what", "what's", "when", "when's", "where", "where's", "which", "while", "who", "who's", "whom", "why", "why's", "with", "won't", "would", "wouldn't", "you", "you'd", "you'll", "you're", "you've", "your", "yours", "yourself", "yourselves"];

var tipuesearch_replace = {'words': []};
var tipuesearch_weight = {'weight': []};
var tipuesearch_stem = {'words': []};
var tipuesearch_related = {'searches': []};

var tipuesearch_string_1 = 'No title';
var tipuesearch_string_2 = 'Showing results for';
var tipuesearch_string_3 = 'Search instead for';
var tipuesearch_string_4 = '1 result';
var tipuesearch_string_5 = 'results';
var tipuesearch_string_6 = 'Back';
var tipuesearch_string_7 = 'More';
var tipuesearch_string_8 = 'Nothing found.';
var tipuesearch_string_9 = 'Common words are largely ignored.';
var tipuesearch_string_10 = 'Search too short';
var tipuesearch_string_11 = 'Should be one character or more.';
var tipuesearch_string_12 = 'Should be';
var tipuesearch_string_13 = 'characters or more.';
var tipuesearch_string_14 = 'seconds';
var tipuesearch_string_15 = 'Searches related to';

var startTimer = new Date().getTime();
